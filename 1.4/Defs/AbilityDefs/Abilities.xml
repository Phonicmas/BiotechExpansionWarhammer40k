<?xml version="1.0" encoding="utf-8" ?>
<Defs>

  <AbilityCategoryDef>
    <defName>SpaceMarine</defName>
    <displayOrder>999</displayOrder>
  </AbilityCategoryDef>

  <!-- Betcher's Spit -->

  <AbilityDef>
    <defName>BEWH_BetchersSpit</defName>
    <label>betcher's spit</label>
    <description>Carriers of the betcher's gland can turn their saliva into a corrosive, blinding acid when consciously triggered</description>
    <iconPath>UI/Abilities/AcidSpray</iconPath>
    <cooldownTicksRange>30000</cooldownTicksRange>
    <aiCanUse>true</aiCanUse>
    <category>SpaceMarine</category>
    <warmupStartSound>AcidSpray_Warmup</warmupStartSound>
    <verbProperties>
      <verbClass>Verb_CastAbility</verbClass>
      <range>26</range>
      <warmupTime>0.5</warmupTime>
      <soundCast>AcidSpray_Resolve</soundCast>
      <targetParams>
        <canTargetLocations>true</canTargetLocations>
      </targetParams>
    </verbProperties>
    <comps>
      <li Class="CompProperties_AbilitySprayLiquid">
        <projectileDef>BEWH_SpitProjectile</projectileDef>
        <numCellsToHit>9</numCellsToHit>
        <sprayEffecter>AcidSpray_Directional</sprayEffecter>
      </li>
    </comps>
  </AbilityDef>
  <!-- Betcher's Spit Projectile-->
  <ThingDef>
    <defName>BEWH_SpitProjectile</defName>
    <label>betcher's acid</label>
    <thingClass>Projectile_Liquid</thingClass>
    <category>Projectile</category>
    <tickerType>Normal</tickerType>
    <altitudeLayer>Projectile</altitudeLayer>
    <useHitPoints>False</useHitPoints>
    <neverMultiSelect>True</neverMultiSelect>
    <graphicData>
      <texPath>Things/Projectile/Acid</texPath>
      <graphicClass>Graphic_Random</graphicClass>
      <shaderType>MoteGlow</shaderType>
      <drawSize>0.85</drawSize>
    </graphicData>
    <projectile>
      <damageDef>AcidBurn</damageDef>
      <speed>35</speed>
      <damageAmountBase>52</damageAmountBase>
      <arcHeightFactor>0.4</arcHeightFactor>
      <armorPenetrationBase>0.92</armorPenetrationBase>
      <stoppingPower>1</stoppingPower>
      <shadowSize>0</shadowSize>
      <filth>Filth_SpentAcid</filth>
      <filthCount>1</filthCount>
    </projectile>
  </ThingDef>

  <!-- Catalepsean Node Unsleeping -->

  <AbilityGroupDef>
    <defName>BEWH_CNU</defName>
    <cooldownTicks>120000</cooldownTicks>
  </AbilityGroupDef>

  <AbilityDef>
    <defName>BEWH_CatalepseanNodeUnsleeping</defName>
    <label>catalepsean node unsleeping</label>
    <description>Carriers of the catalepsean node can consciously "switch off" sections of the brain sequentially, while remaining awake and alert</description>
    <jobDef>CastAbilityOnThing</jobDef>
    <targetRequired>False</targetRequired>
    <canUseAoeToGetTargets>False</canUseAoeToGetTargets>
    <iconPath>UI/Abilities/CatalepseanNodeUnsleeping</iconPath>
    <warmupMoteSocialSymbol>UI/Abilities/CombatCommand</warmupMoteSocialSymbol>
    <stunTargetWhileCasting>True</stunTargetWhileCasting>
    <showPsycastEffects>False</showPsycastEffects>
    <displayGizmoWhileUndrafted>True</displayGizmoWhileUndrafted>
    <disableGizmoWhileUndrafted>False</disableGizmoWhileUndrafted>
    <groupDef>BEWH_CNU</groupDef>
    <uiOrder>3</uiOrder>
    <warmupStartSound>NoSound</warmupStartSound>
    <statBases>
      <Ability_Duration>600</Ability_Duration>
    </statBases>
    <verbProperties>
      <verbClass>Verb_CastAbility</verbClass>
      <warmupTime>0.5</warmupTime>
      <range>0</range>
      <drawAimPie>False</drawAimPie>
      <requireLineOfSight>False</requireLineOfSight>
      <targetParams>
        <canTargetSelf>true</canTargetSelf>
        <canTargetPawns>false</canTargetPawns>
        <canTargetBuildings>false</canTargetBuildings>
        <canTargetAnimals>false</canTargetAnimals>
        <canTargetHumans>false</canTargetHumans>
        <canTargetMechs>false</canTargetMechs>
      </targetParams>
    </verbProperties>
    <comps>
      <li Class="CompProperties_AbilityGiveHediff">
        <compClass>CompAbilityEffect_GiveHediff</compClass>
        <hediffDef>BEWH_CatalepseanNodeUnsleeping</hediffDef>
        <onlyApplyToSelf>True</onlyApplyToSelf>
        <replaceExisting>true</replaceExisting>
      </li>
    </comps>
  </AbilityDef>

  <!-- Sus-an Membrane Stasis -->

  <AbilityGroupDef>
    <defName>BEWH_SAMS</defName>
    <cooldownTicks>60000</cooldownTicks>
  </AbilityGroupDef>

  <AbilityDef>
    <defName>BEWH_Sus_anMembraneStasis</defName>
    <label>sus-an membrane stasis</label>
    <description>Carriers of the sus-an membrane can enter a state of suspended animation, keeping the them alive for years, even if they has suffered otherwise mortal wounds</description>
    <jobDef>CastAbilityOnThing</jobDef>
    <targetRequired>False</targetRequired>
    <canUseAoeToGetTargets>False</canUseAoeToGetTargets>
    <iconPath>UI/Abilities/StasisIcon</iconPath>
    <warmupMoteSocialSymbol>UI/Abilities/CombatCommand</warmupMoteSocialSymbol>
    <stunTargetWhileCasting>True</stunTargetWhileCasting>
    <showPsycastEffects>False</showPsycastEffects>
    <displayGizmoWhileUndrafted>True</displayGizmoWhileUndrafted>
    <disableGizmoWhileUndrafted>False</disableGizmoWhileUndrafted>
    <groupDef>BEWH_SAMS</groupDef>
    <uiOrder>4</uiOrder>
    <warmupStartSound>NoSound</warmupStartSound>
    <verbProperties>
      <verbClass>Verb_CastAbility</verbClass>
      <warmupTime>0.5</warmupTime>
      <range>0</range>
      <drawAimPie>False</drawAimPie>
      <requireLineOfSight>False</requireLineOfSight>
      <targetParams>
        <canTargetSelf>true</canTargetSelf>
        <canTargetPawns>false</canTargetPawns>
        <canTargetBuildings>false</canTargetBuildings>
        <canTargetAnimals>false</canTargetAnimals>
        <canTargetHumans>false</canTargetHumans>
        <canTargetMechs>false</canTargetMechs>
      </targetParams>
    </verbProperties>
    <comps>
      <li Class="CompProperties_AbilityGiveHediff">
        <compClass>CompAbilityEffect_GiveHediff</compClass>
        <hediffDef>BEWH_Sus_anMembraneStasis</hediffDef>
        <onlyApplyToSelf>True</onlyApplyToSelf>
        <replaceExisting>true</replaceExisting>
      </li>
    </comps>
  </AbilityDef>

  <!-- Belisarian Furnace -->

  <AbilityGroupDef>
    <defName>BEWH_BFB</defName>
    <cooldownTicks>240000</cooldownTicks>
  </AbilityGroupDef>

  <AbilityDef>
    <defName>BEWH_BelisarianFurnaceBoost</defName>
    <label>belisarian furnace revitaliser</label>
    <description>Carriers of the belisarian furnace can produce a hyper-cocktail to boost their regrowth of tissue, bone and muscle</description>
    <jobDef>CastAbilityOnThing</jobDef>
    <targetRequired>False</targetRequired>
    <canUseAoeToGetTargets>False</canUseAoeToGetTargets>
    <iconPath>UI/Abilities/BelisarianFurnaceBoost</iconPath>
    <warmupMoteSocialSymbol>UI/Abilities/CombatCommand</warmupMoteSocialSymbol>
    <stunTargetWhileCasting>True</stunTargetWhileCasting>
    <showPsycastEffects>False</showPsycastEffects>
    <displayGizmoWhileUndrafted>True</displayGizmoWhileUndrafted>
    <disableGizmoWhileUndrafted>False</disableGizmoWhileUndrafted>
    <groupDef>BEWH_BFB</groupDef>
    <uiOrder>4</uiOrder>
    <warmupStartSound>NoSound</warmupStartSound>
    <statBases>
      <Ability_Duration>120</Ability_Duration>
    </statBases>
    <verbProperties>
      <verbClass>Verb_CastAbility</verbClass>
      <warmupTime>0.5</warmupTime>
      <range>0</range>
      <drawAimPie>False</drawAimPie>
      <requireLineOfSight>False</requireLineOfSight>
      <targetParams>
        <canTargetSelf>true</canTargetSelf>
        <canTargetPawns>false</canTargetPawns>
        <canTargetBuildings>false</canTargetBuildings>
        <canTargetAnimals>false</canTargetAnimals>
        <canTargetHumans>false</canTargetHumans>
        <canTargetMechs>false</canTargetMechs>
      </targetParams>
    </verbProperties>
    <comps>
      <li Class="CompProperties_AbilityGiveHediff">
        <compClass>CompAbilityEffect_GiveHediff</compClass>
        <hediffDef>BEWH_BelisarianFurnaceBoost</hediffDef>
        <onlyApplyToSelf>True</onlyApplyToSelf>
        <replaceExisting>true</replaceExisting>
      </li>
    </comps>
  </AbilityDef>

</Defs>